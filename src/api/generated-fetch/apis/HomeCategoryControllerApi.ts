/* tslint:disable */
/* eslint-disable */
/**
 * OpenAPI definition
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  Home,
  HomeCategory,
} from '../models/index';
import {
    HomeFromJSON,
    HomeToJSON,
    HomeCategoryFromJSON,
    HomeCategoryToJSON,
} from '../models/index';

export interface CreateHomeCategoriesRequest {
    homeCategory: Array<HomeCategory>;
}

export interface UpdateHomeCategoryRequest {
    id: number;
    homeCategory: HomeCategory;
}

/**
 * 
 */
export class HomeCategoryControllerApi extends runtime.BaseAPI {

    /**
     */
    async createHomeCategoriesRaw(requestParameters: CreateHomeCategoriesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Home>> {
        if (requestParameters['homeCategory'] == null) {
            throw new runtime.RequiredError(
                'homeCategory',
                'Required parameter "homeCategory" was null or undefined when calling createHomeCategories().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        const response = await this.request({
            path: `/home-categories`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: requestParameters['homeCategory']!.map(HomeCategoryToJSON),
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => HomeFromJSON(jsonValue));
    }

    /**
     */
    async createHomeCategories(requestParameters: CreateHomeCategoriesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Home> {
        const response = await this.createHomeCategoriesRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     */
    async getAllHomeCategoriesRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Array<HomeCategory>>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/home-categories/admin/home-category`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => jsonValue.map(HomeCategoryFromJSON));
    }

    /**
     */
    async getAllHomeCategories(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Array<HomeCategory>> {
        const response = await this.getAllHomeCategoriesRaw(initOverrides);
        return await response.value();
    }

    /**
     */
    async updateHomeCategoryRaw(requestParameters: UpdateHomeCategoryRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<HomeCategory>> {
        if (requestParameters['id'] == null) {
            throw new runtime.RequiredError(
                'id',
                'Required parameter "id" was null or undefined when calling updateHomeCategory().'
            );
        }

        if (requestParameters['homeCategory'] == null) {
            throw new runtime.RequiredError(
                'homeCategory',
                'Required parameter "homeCategory" was null or undefined when calling updateHomeCategory().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        const response = await this.request({
            path: `/home-categories/admin/home-category/{id}`.replace(`{${"id"}}`, encodeURIComponent(String(requestParameters['id']))),
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
            body: HomeCategoryToJSON(requestParameters['homeCategory']),
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => HomeCategoryFromJSON(jsonValue));
    }

    /**
     */
    async updateHomeCategory(requestParameters: UpdateHomeCategoryRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<HomeCategory> {
        const response = await this.updateHomeCategoryRaw(requestParameters, initOverrides);
        return await response.value();
    }

}
