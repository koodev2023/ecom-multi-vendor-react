/* tslint:disable */
/* eslint-disable */
/**
 * OpenAPI definition
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  Seller,
} from '../models/index';
import {
    SellerFromJSON,
    SellerToJSON,
} from '../models/index';

export interface UpdateSellerStatusRequest {
    id: number;
    status: UpdateSellerStatusStatusEnum;
}

/**
 * 
 */
export class AdminControllerApi extends runtime.BaseAPI {

    /**
     */
    async updateSellerStatusRaw(requestParameters: UpdateSellerStatusRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Seller>> {
        if (requestParameters['id'] == null) {
            throw new runtime.RequiredError(
                'id',
                'Required parameter "id" was null or undefined when calling updateSellerStatus().'
            );
        }

        if (requestParameters['status'] == null) {
            throw new runtime.RequiredError(
                'status',
                'Required parameter "status" was null or undefined when calling updateSellerStatus().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/seller/{id}/status/{status}`.replace(`{${"id"}}`, encodeURIComponent(String(requestParameters['id']))).replace(`{${"status"}}`, encodeURIComponent(String(requestParameters['status']))),
            method: 'PATCH',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => SellerFromJSON(jsonValue));
    }

    /**
     */
    async updateSellerStatus(requestParameters: UpdateSellerStatusRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Seller> {
        const response = await this.updateSellerStatusRaw(requestParameters, initOverrides);
        return await response.value();
    }

}

/**
 * @export
 */
export const UpdateSellerStatusStatusEnum = {
    PendingVerification: 'PENDING_VERIFICATION',
    Active: 'ACTIVE',
    Suspended: 'SUSPENDED',
    Deactivated: 'DEACTIVATED',
    Banned: 'BANNED',
    Closed: 'CLOSED'
} as const;
export type UpdateSellerStatusStatusEnum = typeof UpdateSellerStatusStatusEnum[keyof typeof UpdateSellerStatusStatusEnum];
