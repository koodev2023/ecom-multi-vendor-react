/* tslint:disable */
/* eslint-disable */
/**
 * OpenAPI definition
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  Wishlist,
} from '../models/index';
import {
    WishlistFromJSON,
    WishlistToJSON,
} from '../models/index';

export interface AddProductToWishlistRequest {
    productId: number;
    authorization: string;
}

export interface GetUserWishlistRequest {
    authorization: string;
}

/**
 * 
 */
export class WishlistControllerApi extends runtime.BaseAPI {

    /**
     */
    async addProductToWishlistRaw(requestParameters: AddProductToWishlistRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Wishlist>> {
        if (requestParameters['productId'] == null) {
            throw new runtime.RequiredError(
                'productId',
                'Required parameter "productId" was null or undefined when calling addProductToWishlist().'
            );
        }

        if (requestParameters['authorization'] == null) {
            throw new runtime.RequiredError(
                'authorization',
                'Required parameter "authorization" was null or undefined when calling addProductToWishlist().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        if (requestParameters['authorization'] != null) {
            headerParameters['Authorization'] = String(requestParameters['authorization']);
        }

        const response = await this.request({
            path: `/wishlists/add-product/{productId}`.replace(`{${"productId"}}`, encodeURIComponent(String(requestParameters['productId']))),
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => WishlistFromJSON(jsonValue));
    }

    /**
     */
    async addProductToWishlist(requestParameters: AddProductToWishlistRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Wishlist> {
        const response = await this.addProductToWishlistRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     */
    async getUserWishlistRaw(requestParameters: GetUserWishlistRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Wishlist>> {
        if (requestParameters['authorization'] == null) {
            throw new runtime.RequiredError(
                'authorization',
                'Required parameter "authorization" was null or undefined when calling getUserWishlist().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        if (requestParameters['authorization'] != null) {
            headerParameters['Authorization'] = String(requestParameters['authorization']);
        }

        const response = await this.request({
            path: `/wishlists`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => WishlistFromJSON(jsonValue));
    }

    /**
     */
    async getUserWishlist(requestParameters: GetUserWishlistRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Wishlist> {
        const response = await this.getUserWishlistRaw(requestParameters, initOverrides);
        return await response.value();
    }

}
