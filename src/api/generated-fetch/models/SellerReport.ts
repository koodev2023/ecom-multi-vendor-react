/* tslint:disable */
/* eslint-disable */
/**
 * OpenAPI definition
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { Seller } from './Seller';
import {
    SellerFromJSON,
    SellerFromJSONTyped,
    SellerToJSON,
    SellerToJSONTyped,
} from './Seller';

/**
 * 
 * @export
 * @interface SellerReport
 */
export interface SellerReport {
    /**
     * 
     * @type {number}
     * @memberof SellerReport
     */
    id?: number;
    /**
     * 
     * @type {Seller}
     * @memberof SellerReport
     */
    seller?: Seller;
    /**
     * 
     * @type {number}
     * @memberof SellerReport
     */
    totalEarnings?: number;
    /**
     * 
     * @type {number}
     * @memberof SellerReport
     */
    totalSales?: number;
    /**
     * 
     * @type {number}
     * @memberof SellerReport
     */
    totalRefunds?: number;
    /**
     * 
     * @type {number}
     * @memberof SellerReport
     */
    totalTax?: number;
    /**
     * 
     * @type {number}
     * @memberof SellerReport
     */
    totalOrders?: number;
    /**
     * 
     * @type {number}
     * @memberof SellerReport
     */
    canceledOrders?: number;
    /**
     * 
     * @type {number}
     * @memberof SellerReport
     */
    totalTransactions?: number;
}

/**
 * Check if a given object implements the SellerReport interface.
 */
export function instanceOfSellerReport(value: object): value is SellerReport {
    return true;
}

export function SellerReportFromJSON(json: any): SellerReport {
    return SellerReportFromJSONTyped(json, false);
}

export function SellerReportFromJSONTyped(json: any, ignoreDiscriminator: boolean): SellerReport {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'] == null ? undefined : json['id'],
        'seller': json['seller'] == null ? undefined : SellerFromJSON(json['seller']),
        'totalEarnings': json['totalEarnings'] == null ? undefined : json['totalEarnings'],
        'totalSales': json['totalSales'] == null ? undefined : json['totalSales'],
        'totalRefunds': json['totalRefunds'] == null ? undefined : json['totalRefunds'],
        'totalTax': json['totalTax'] == null ? undefined : json['totalTax'],
        'totalOrders': json['totalOrders'] == null ? undefined : json['totalOrders'],
        'canceledOrders': json['canceledOrders'] == null ? undefined : json['canceledOrders'],
        'totalTransactions': json['totalTransactions'] == null ? undefined : json['totalTransactions'],
    };
}

export function SellerReportToJSON(json: any): SellerReport {
    return SellerReportToJSONTyped(json, false);
}

export function SellerReportToJSONTyped(value?: SellerReport | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'seller': SellerToJSON(value['seller']),
        'totalEarnings': value['totalEarnings'],
        'totalSales': value['totalSales'],
        'totalRefunds': value['totalRefunds'],
        'totalTax': value['totalTax'],
        'totalOrders': value['totalOrders'],
        'canceledOrders': value['canceledOrders'],
        'totalTransactions': value['totalTransactions'],
    };
}

