/* tslint:disable */
/* eslint-disable */
/**
 * OpenAPI definition
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface Category
 */
export interface Category {
    /**
     * 
     * @type {number}
     * @memberof Category
     */
    id?: number;
    /**
     * 
     * @type {string}
     * @memberof Category
     */
    name?: string;
    /**
     * 
     * @type {string}
     * @memberof Category
     */
    categoryCode: string;
    /**
     * 
     * @type {Category}
     * @memberof Category
     */
    parentCategory?: Category;
    /**
     * 
     * @type {number}
     * @memberof Category
     */
    level: number;
}

/**
 * Check if a given object implements the Category interface.
 */
export function instanceOfCategory(value: object): value is Category {
    if (!('categoryCode' in value) || value['categoryCode'] === undefined) return false;
    if (!('level' in value) || value['level'] === undefined) return false;
    return true;
}

export function CategoryFromJSON(json: any): Category {
    return CategoryFromJSONTyped(json, false);
}

export function CategoryFromJSONTyped(json: any, ignoreDiscriminator: boolean): Category {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'] == null ? undefined : json['id'],
        'name': json['name'] == null ? undefined : json['name'],
        'categoryCode': json['categoryCode'],
        'parentCategory': json['parentCategory'] == null ? undefined : CategoryFromJSON(json['parentCategory']),
        'level': json['level'],
    };
}

export function CategoryToJSON(json: any): Category {
    return CategoryToJSONTyped(json, false);
}

export function CategoryToJSONTyped(value?: Category | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'name': value['name'],
        'categoryCode': value['categoryCode'],
        'parentCategory': CategoryToJSON(value['parentCategory']),
        'level': value['level'],
    };
}

