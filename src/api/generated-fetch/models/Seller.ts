/* tslint:disable */
/* eslint-disable */
/**
 * OpenAPI definition
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { Address } from './Address';
import {
    AddressFromJSON,
    AddressFromJSONTyped,
    AddressToJSON,
    AddressToJSONTyped,
} from './Address';
import type { BankDetails } from './BankDetails';
import {
    BankDetailsFromJSON,
    BankDetailsFromJSONTyped,
    BankDetailsToJSON,
    BankDetailsToJSONTyped,
} from './BankDetails';
import type { BusinessDetails } from './BusinessDetails';
import {
    BusinessDetailsFromJSON,
    BusinessDetailsFromJSONTyped,
    BusinessDetailsToJSON,
    BusinessDetailsToJSONTyped,
} from './BusinessDetails';

/**
 * 
 * @export
 * @interface Seller
 */
export interface Seller {
    /**
     * 
     * @type {number}
     * @memberof Seller
     */
    id?: number;
    /**
     * 
     * @type {string}
     * @memberof Seller
     */
    sellerName?: string;
    /**
     * 
     * @type {string}
     * @memberof Seller
     */
    mobile?: string;
    /**
     * 
     * @type {string}
     * @memberof Seller
     */
    email?: string;
    /**
     * 
     * @type {string}
     * @memberof Seller
     */
    password?: string;
    /**
     * 
     * @type {BusinessDetails}
     * @memberof Seller
     */
    businessDetails?: BusinessDetails;
    /**
     * 
     * @type {BankDetails}
     * @memberof Seller
     */
    bankDetails?: BankDetails;
    /**
     * 
     * @type {Address}
     * @memberof Seller
     */
    pickupAddress?: Address;
    /**
     * 
     * @type {string}
     * @memberof Seller
     */
    role?: SellerRoleEnum;
    /**
     * 
     * @type {string}
     * @memberof Seller
     */
    accountStatus?: SellerAccountStatusEnum;
    /**
     * 
     * @type {boolean}
     * @memberof Seller
     */
    emailVerified?: boolean;
    /**
     * 
     * @type {string}
     * @memberof Seller
     */
    gstin?: string;
}


/**
 * @export
 */
export const SellerRoleEnum = {
    RoleAdmin: 'ROLE_ADMIN',
    RoleCustomer: 'ROLE_CUSTOMER',
    RoleSeller: 'ROLE_SELLER'
} as const;
export type SellerRoleEnum = typeof SellerRoleEnum[keyof typeof SellerRoleEnum];

/**
 * @export
 */
export const SellerAccountStatusEnum = {
    PendingVerification: 'PENDING_VERIFICATION',
    Active: 'ACTIVE',
    Suspended: 'SUSPENDED',
    Deactivated: 'DEACTIVATED',
    Banned: 'BANNED',
    Closed: 'CLOSED'
} as const;
export type SellerAccountStatusEnum = typeof SellerAccountStatusEnum[keyof typeof SellerAccountStatusEnum];


/**
 * Check if a given object implements the Seller interface.
 */
export function instanceOfSeller(value: object): value is Seller {
    return true;
}

export function SellerFromJSON(json: any): Seller {
    return SellerFromJSONTyped(json, false);
}

export function SellerFromJSONTyped(json: any, ignoreDiscriminator: boolean): Seller {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'] == null ? undefined : json['id'],
        'sellerName': json['sellerName'] == null ? undefined : json['sellerName'],
        'mobile': json['mobile'] == null ? undefined : json['mobile'],
        'email': json['email'] == null ? undefined : json['email'],
        'password': json['password'] == null ? undefined : json['password'],
        'businessDetails': json['businessDetails'] == null ? undefined : BusinessDetailsFromJSON(json['businessDetails']),
        'bankDetails': json['bankDetails'] == null ? undefined : BankDetailsFromJSON(json['bankDetails']),
        'pickupAddress': json['pickupAddress'] == null ? undefined : AddressFromJSON(json['pickupAddress']),
        'role': json['role'] == null ? undefined : json['role'],
        'accountStatus': json['accountStatus'] == null ? undefined : json['accountStatus'],
        'emailVerified': json['emailVerified'] == null ? undefined : json['emailVerified'],
        'gstin': json['gstin'] == null ? undefined : json['gstin'],
    };
}

export function SellerToJSON(json: any): Seller {
    return SellerToJSONTyped(json, false);
}

export function SellerToJSONTyped(value?: Seller | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'sellerName': value['sellerName'],
        'mobile': value['mobile'],
        'email': value['email'],
        'password': value['password'],
        'businessDetails': BusinessDetailsToJSON(value['businessDetails']),
        'bankDetails': BankDetailsToJSON(value['bankDetails']),
        'pickupAddress': AddressToJSON(value['pickupAddress']),
        'role': value['role'],
        'accountStatus': value['accountStatus'],
        'emailVerified': value['emailVerified'],
        'gstin': value['gstin'],
    };
}

