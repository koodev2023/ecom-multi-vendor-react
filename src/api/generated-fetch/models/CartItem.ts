/* tslint:disable */
/* eslint-disable */
/**
 * OpenAPI definition
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { Product } from './Product';
import {
    ProductFromJSON,
    ProductFromJSONTyped,
    ProductToJSON,
    ProductToJSONTyped,
} from './Product';

/**
 * 
 * @export
 * @interface CartItem
 */
export interface CartItem {
    /**
     * 
     * @type {number}
     * @memberof CartItem
     */
    id?: number;
    /**
     * 
     * @type {Product}
     * @memberof CartItem
     */
    product?: Product;
    /**
     * 
     * @type {string}
     * @memberof CartItem
     */
    size?: string;
    /**
     * 
     * @type {number}
     * @memberof CartItem
     */
    quantity?: number;
    /**
     * 
     * @type {number}
     * @memberof CartItem
     */
    mrpPrice?: number;
    /**
     * 
     * @type {number}
     * @memberof CartItem
     */
    sellingPrice?: number;
    /**
     * 
     * @type {number}
     * @memberof CartItem
     */
    userId?: number;
}

/**
 * Check if a given object implements the CartItem interface.
 */
export function instanceOfCartItem(value: object): value is CartItem {
    return true;
}

export function CartItemFromJSON(json: any): CartItem {
    return CartItemFromJSONTyped(json, false);
}

export function CartItemFromJSONTyped(json: any, ignoreDiscriminator: boolean): CartItem {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'] == null ? undefined : json['id'],
        'product': json['product'] == null ? undefined : ProductFromJSON(json['product']),
        'size': json['size'] == null ? undefined : json['size'],
        'quantity': json['quantity'] == null ? undefined : json['quantity'],
        'mrpPrice': json['mrpPrice'] == null ? undefined : json['mrpPrice'],
        'sellingPrice': json['sellingPrice'] == null ? undefined : json['sellingPrice'],
        'userId': json['userId'] == null ? undefined : json['userId'],
    };
}

export function CartItemToJSON(json: any): CartItem {
    return CartItemToJSONTyped(json, false);
}

export function CartItemToJSONTyped(value?: CartItem | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'product': ProductToJSON(value['product']),
        'size': value['size'],
        'quantity': value['quantity'],
        'mrpPrice': value['mrpPrice'],
        'sellingPrice': value['sellingPrice'],
        'userId': value['userId'],
    };
}

